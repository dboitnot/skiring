---
name: Build skiring

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop
    tags:
      - v0.*

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: configure
        run: ./configure

      - name: Run distcheck
        run: make distcheck

  tarball:
    needs: check
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.v }}
    steps:
      - uses: actions/checkout@v2

      - name: Get build version
        id: version
        run: echo "::set-output name=v::$(./set_version.sh $GITHUB_REF)"

      - name: Check for error with version
        run: "[ -z '${{ steps.version.outputs.v }}' ] && exit 1 || echo Ok"

      - name: Regenerate build tools
        run: autoreconf -i

      - name: configure
        run: ./configure

      - name: Build source tarball
        run: make dist

      - uses: actions/upload-artifact@v3
        with:
          name: tarball
          path: skiring-${{ steps.version.outputs.v }}.tar.gz

  package:
    needs: tarball
    runs-on: ubuntu-latest

    strategy:
      matrix:
        platform:
          - redhat

    steps:
      - uses: actions/checkout@v2

      - name: Remove prior builds
        run: rm -Rf dist

      - uses: actions/download-artifact@v3
        with:
          name: tarball

      - name: Build packages
        run: ./package.sh ${{ matrix.platform }} ${{ needs.tarball.outputs.version }} 1

      - name: Check packages
        run: ls -lh dist

      - uses: actions/upload-artifact@v3
        with:
          name: pkg-${{ matrix.platform }}
          path: dist/

  release:
    needs:
      - package
      - tarball
    if: needs.tarball.outputs.version != 'SNAPSHOT'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          path: dist

      - name: List artifacts
        run: find dist -type f
